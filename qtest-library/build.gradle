buildscript {
    ext.kotlin_version = '1.2.41'
    ext.junitVersion = '1.2.0'
    ext.jupiterVersion = '5.2.0'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'eclipse'

repositories {
    mavenCentral()
}

test {
    // We must enable JUnit
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

dependencies {
    def okHttpVersion = '3.10.0'
    def jacksonVersion = '2.9.5'

    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: okHttpVersion
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jacksonVersion
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jacksonVersion
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: jacksonVersion
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: jacksonVersion
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: jacksonVersion
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    // Testing
    testCompile "org.junit.platform:junit-platform-engine:$junitVersion"
//    testCompile "org.hamcrest:java-hamcrest:2.0.0.0"
//    testCompile 'com.github.npathai:hamcrest-optional:2.0.0'
    testCompile("org.junit.jupiter:junit-jupiter-api:$jupiterVersion")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$jupiterVersion")
    testCompile 'io.kotlintest:kotlintest-runner-junit5:3.1.6'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}