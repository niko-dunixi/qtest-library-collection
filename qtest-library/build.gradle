buildscript {
    ext.kotlin_version = '1.2.50'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

group 'io.paulbaker.qtest'
version '1.0-SNAPSHOT'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

// https://discuss.kotlinlang.org/t/how-to-attach-the-kotlin-library-sources/128/5
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

dependencies {
    def okHttpVersion = '3.10.0'
    def jacksonVersion = '2.9.5'
    def junitVersion = '1.2.0'
    def jupiterVersion = '5.2.0'
    def kotlintestVersion = '3.1.6'

    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: okHttpVersion
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jacksonVersion
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jacksonVersion
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: jacksonVersion
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: jacksonVersion
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: jacksonVersion
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    // Testing
    // JUnit5
//    compile "org.junit.juptier:junit-platform-commons:$junitVersion"
    testCompile "org.junit.platform:junit-platform-console:$junitVersion"
    testCompile "org.junit.platform:junit-platform-console-standalone:$junitVersion"
    testCompile "org.junit.platform:junit-platform-engine:$junitVersion"
    testCompile "org.junit.platform:junit-platform-launcher:$junitVersion"
    testCompile "org.junit.platform:junit-platform-runner:$junitVersion"
    testCompile "org.junit.platform:junit-platform-suite-api:$junitVersion"
    // JUnit Jupiter
    compile "org.junit.jupiter:junit-jupiter-api:$jupiterVersion"
    compile "org.junit.jupiter:junit-jupiter-params:$jupiterVersion"
    compile "org.junit.jupiter:junit-jupiter-engine:$jupiterVersion"
    // Hamcrest
    compile "org.hamcrest:java-hamcrest:2.0.0.0"
    compile "org.hamcrest:hamcrest-junit:2.0.0.0"
    compile 'com.github.npathai:hamcrest-optional:2.0.0'
//    testCompile("org.junit.jupiter:junit-jupiter-api:$jupiterVersion")
//    testRuntime("org.junit.jupiter:junit-jupiter-engine:$jupiterVersion")
//    compile "io.kotlintest:kotlintest-runner-junit5:$kotlintestVersion"
}

kotlin { experimental { coroutines 'enable' } }
test {
    // We must enable JUnit
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}